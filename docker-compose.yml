version: '3'

services:
  # Main application container
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shopping-list-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - VITE_GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - VITE_MAPBOX_TOKEN=${MAPBOX_TOKEN}
    networks:
      - app-network

  # NGINX reverse proxy with Let's Encrypt
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    restart: unless-stopped
    networks:
      - app-network

  # LetsEncrypt companion container
  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: letsencrypt
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
    restart: unless-stopped
    networks:
      - app-network

  # DuckDNS updater container
  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - SUBDOMAINS=${DUCKDNS_SUBDOMAIN}
      - TOKEN=${DUCKDNS_TOKEN}
      - LOG_FILE=false
    restart: unless-stopped
    networks:
      - app-network
    
  # App gateway container with virtual host
  app-gateway:
    image: nginx:alpine
    container_name: app-gateway
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    environment:
      - VIRTUAL_HOST=${DUCKDNS_SUBDOMAIN}.duckdns.org
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${DUCKDNS_SUBDOMAIN}.duckdns.org
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  certs:
  vhost:
  html:
  acme:
